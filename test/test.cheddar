let stacks = [
    [],    // A
    []     // B
];
let index = 0;
let prog = cheddar.argv[1] == "-e" ? cheddar.argv.slice(2) : String::IO.read(cheddar.argv[1]);
func pop(arr){
    return arr.len ? arr.pop() : 0;
};
func peek(arr){
    return arr.len ? arr[-1] : 1;
};
for(let i = 0; i < prog.len; i += 1){
    let c = prog[i];
    if(c == "+"){
        stacks[index].push(peek(stacks[index]) + peek(stacks[1 - index]));
    } else if(c == "-"){
        stacks[index].push(peek(stacks[index]) - peek(stacks[1 - index]));
    } else if(c == "@"){
        index = 1 - index;
    } else if(c == "!"){
        stacks[index].push(1);
    } else if(c == "."){
        IO.printf(@"pop(stacks[index]));
    } else if(c == "<"){
        stacks[index].push(pop(stacks[index - 1]));
    } else if(c == ">"){
        stacks[index - 1].push(peek(stacks[index]));
    } else if(c == "^"){
        pop(stacks[index]);
    } else if(c == "v"){
        let top1 = pop(stacks[index]);
        let top2 = pop(stacks[1 - index]);
        stacks[1 - index].push(top1);
        stacks[index].push(top2);
    } else if(c == "#"){
        stacks = stacks.map(stack -> stack);
    }
}

print stacks;
